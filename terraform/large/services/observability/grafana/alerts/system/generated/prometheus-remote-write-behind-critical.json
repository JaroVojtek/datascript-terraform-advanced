{
  "ruleGroup": "prometheus-k8s-prometheus",
  "title": "prometheus-remote-write-behind-critical",
  "condition": "B",
  "for": "15m",
  "noDataState": "OK",
  "labels": {
    "severity": "critical"
  },
  "annotations": {
    "description": "{{ if $values.B }}Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf \"%.1f\" $values.B.Value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.{{ end }}",
    "runbook_url": "https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritebehind",
    "summary": "Prometheus remote write is behind."
  },
  "data": [
    {
      "refId": "A",
      "datasourceUid": "thanos",
      "model": {
        "expr": "# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n- ignoring(remote_name, url) group_right\n  max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-k8s\",namespace=\"monitoring\"}[5m])\n)\n\u003e 120\n"
      }
    },
    {
      "refId": "B",
      "datasourceUid": "-100",
      "model": {
        "type": "reduce",
        "reducer": "last",
        "expression": "A"
      }
    }
  ]
}
